<template>
    <div style="height: 100%" class="moudle-wrap modal clearfix" id="content" ref="content">
        <el-col>
            <div>
                <el-form class="demo-ruleForm" inline>
                    <el-row class="search-from">
                        <date-group :dateGroup="{text:'',startDate:formValidate.startTime,endDate:formValidate.endTime}"
                                    style="display: inline;">
                            <el-form-item slot="start" prop="beginTime" label="开始时间" style="margin-left: 20px">
                                <el-date-picker v-model="formValidate.startTime" type="datetime" :editable="false"
                                                placeholder="选择时间" :picker-options="pickerOptions0"
                                                @change="handleStartTime">
                                </el-date-picker>
                            </el-form-item>
                            <i></i>
                            <el-form-item slot="end" prop="endTime" label="结束时间">
                                <el-date-picker v-model="formValidate.endTime" type="datetime" :editable="false"
                                                placeholder="选择时间" :picker-options="pickerOptions1"
                                                @change="handleEndTime">
                                </el-date-picker>
                            </el-form-item>
                        </date-group>
                        <!--<el-form-item label="申请状态：" prop="status">-->
                        <!--<el-select size="small" v-model="formValidate.auditStatus" placeholder="">-->
                        <!--<el-option label="全部" value=""></el-option>-->
                        <!--<el-option label="待审核" value="0"></el-option>-->
                        <!--<el-option label="已通过" value="1"></el-option>-->
                        <!--<el-option label="已拒绝" value="2"></el-option>-->
                        <!--</el-select>-->
                        <!--</el-form-item>-->
                        <el-button class="search-btn" size="small" type="primary" @click="searchEvent">搜索</el-button>
                    </el-row>
                    <el-col :span="14" style="margin-bottom:20px">
                      <el-button size="small" class="greenButton" @click="add">新建任务</el-button>
                    </el-col>
                </el-form>
            </div>

            <div id="myTable" ref="myTable">
                <el-table align="center" :context="self" :height="dynamicHt" :data="tableData" tooltip-effect="dark"
                          style="width: 100%">
                    <el-table-column prop="index" label="序号" width="70px" show-overflow-tooltip></el-table-column>
                    <el-table-column label="任务名称" prop="name" show-overflow-tooltip></el-table-column>
                    <!--<el-table-column label="类型" align="center" prop="publishType" width="120" show-overflow-tooltip></el-table-column>-->
                    <el-table-column label="发布者" prop="publisherName"
                                     show-overflow-tooltip></el-table-column>
                    <el-table-column label="发布日期" align="center" prop="updateTime" show-overflow-tooltip>
                        <template slot-scope="scope">
                            {{ scope.row.updateTime | formatDate('yyyy-MM-dd HH:mm') }}
                        </template>
                    </el-table-column>
                    <el-table-column label="开始时间" align="center" prop="beginTime" show-overflow-tooltip>
                        <template slot-scope="scope">
                            {{ scope.row.beginTime | formatDate('yyyy-MM-dd HH:mm') }}
                        </template>
                    </el-table-column>
                    <el-table-column label="结束时间" align="center" prop="endTime" show-overflow-tooltip>
                        <template slot-scope="scope">
                            {{ scope.row.endTime | formatDate('yyyy-MM-dd HH:mm') }}
                        </template>
                    </el-table-column>
                    <el-table-column label="状态" align="center" prop="progressStatus" show-overflow-tooltip>
                        <template slot-scope="scope">
                            {{ scope.row.progressStatus | progressStatus }}
                        </template>
                    </el-table-column>
                    <el-table-column label="操作" align="center" width="210">
                        <template slot-scope="scope">
                          <el-button size="small" class="tableMakeItem" @click="show(scope.row)">查看</el-button>
                            <!--<el-button v-if="scope.row.status == '已发布'" size="small" type="warning" @click="stop(scope.$index,scope.row)">停止</el-button>-->
                            <!--<el-button v-if="scope.row.status == '未发布'" size="small" type="warning" @click="start(scope.$index,scope.row)">发布</el-button>-->
                        </template>
                    </el-table-column>
                </el-table>
                <div style="margin: 10px 50px 10px 0;">
                    <div style="float: right;">
                        <el-pagination @size-change="changePageSize" @current-change="changePage"
                                       :current-page.sync="myPages.currentPage" :page-size="myPages.pageSize"
                                       layout="total,prev, pager, next, jumper" :total="totalCount">
                        </el-pagination>
                    </div>
                </div>
            </div>
            <!--新增弹窗-->
            <Modal :mask-closable="false" width="1000" v-model="addModal" title="新增任务"
                   class-name="vertical-center-modal" :loading="loading">
                <modal-header slot="header" :content="addId"></modal-header>
                <add v-if="addModal" @cancel="cancel" @add="subCallback"></add>
                <div slot="footer"></div>
            </Modal>
            <!--详情弹窗-->
            <Modal :mask-closable="false" width="1000" v-model="showModal" title="新增任务"
                   class-name="vertical-center-modal" :loading="loading">
                <modal-header slot="header" :content="showId"></modal-header>
                <show v-if="showModal" @cancel="cancel" @show="subCallback" :operaility-data="operailityData"></show>
                <div slot="footer"></div>
            </Modal>
        </el-col>

    </div>
</template>
<script>
  import add from './taskPublish_add.vue'
  import show from './components/task_show.vue'
  import api from './api'

  let Util = null
  export default {
    props: ['contentHeight'],
    data () {
      return {
        //* 表格 *//
        self: this,
        totalCount: 0,
        loading: false,
        dynamicHt: 0, // 表格高度
        multipleSelection: [],
        operailityData: {},
        tableData: [],
        formValidate: {
          publishType: '0',
          startTime: '',
          endTime: '',
          auditStatus: ''
        },
        showId: {
          id: 'show',
          title: '查看任务'
        },
        addId: {
          id: 'add',
          title: '新增任务'
        }
      }
    },
    created () {
      this.init()
    },
    methods: {
      //初始化函数
      init () {
        Util = this.$util
        this.myPages = Util.pageInitPrams
        this.queryQptions = {
          url: api.list.path,
          params: {
            curPage: 1,
            pageSize: Util.pageInitPrams.pageSize
          }
        }
        this.setTableData()
      },
      /************************** 表格 ************************/
      /*
               * 设置表格数据
               * @param isLoading Boolean 是否加载
               */
      setTableData (isLoading) {
        let data = this.$util.getFormData(this.formValidate)
        data.startTime = (data.startTime && new Date(data.startTime).getTime()) || ''
        data.endTime = (data.endTime && new Date(data.endTime).getTime()) || ''
        Object.assign(this.queryQptions.params, data)
        this.ajax(
          {
            ajaxSuccess: 'listDataSuccess',
            ajaxParams: this.queryQptions
          },
          isLoading
        )
      },
      // 数据请求成功回调
      listDataSuccess (res, m, loading) {
        this.totalCount = res.data.totalCount || 0
        this.tableData = this.addIndex(res.data.dataList || [])
      },
      //查看
      show (item) {
        this.operailityData = item
        this.openModel('show')
      },
      //搜索查询
      searchEvent () {
        this.setTableData()
      },
      //新增弹窗
      add () {
        console.log(1)
        this.openModel('add')
      },
      //停止任务
      //      stop(){
      //        this.$confirm('此操作将停止该任务, 是否继续?', '提示', {
      //          confirmButtonText: '确定',
      //          cancelButtonText: '取消',
      //          type: 'warning'
      //        }).then(() => {
      //          this.$message({
      //            type: 'success',
      //            message: '操作成功!'
      //          });
      //        }).catch(() => {
      //          this.$message({
      //            type: 'info',
      //            message: '已取消'
      //          });
      //        });
      //      },
      //设置表格及分页的位置
      setTableDynHeight () {
        let myTable = this.$refs.myTable
        let paginationHt = 170
        this.dynamicHt = this.contentHeight - myTable.offsetTop - paginationHt
      },
      /*
               * 监听子组件通讯的方法
               * 作用:根据不同的参数关闭对应的模态
               * @param targer string example:"add"、"edit"
               * */
      cancel (targer) {
        this[targer + 'Modal'] = false
      },
      /*
               * 监听子组件通讯的方法
               * 作用:ajax请求成功回调,该监听方法在libs/util 中的混合模式下定义回调
               * @param udata boolean 默认false  是否不需要刷新当前表格数据
               * */
      subCallback (target, title, updata) {
        this.cancel(target)
        if (title) {
          this.successMess(title)
        }
        if (!updata) {
          this.setTableData()
        }
      },
      /*
               * 打开指定的模态窗体
               * @param options string 当前指定的模态:"add"、"edit"
               * */
      openModel (options) {
        this[options + 'Modal'] = true
      }
    },
    mounted () {
      //页面dom稳定后调用
      this.$nextTick(function () {
        //初始表格高度及分页位置
        this.setTableDynHeight()
        //为窗体绑定改变大小事件
        let Event = Util.events
        Event.addHandler(window, 'resize', this.setTableDynHeight)
      })
    },
    watch: {
      contentHeight () {
        this.setTableDynHeight()
      }
    },
    components: {
      add,
      show
      // edit
    }
  }
</script>
<!--<style lang="scss" scoped>-->
<!--.clearfix:after {-->
<!--content: " ";-->
<!--display: block;-->
<!--clear: both;-->
<!--height: 0;-->
<!--}-->

<!--.clearfix {-->
<!--zoom: 1;-->
<!--}-->

<!--.btn-lable {-->
<!--font-size: 16px;-->
<!--}-->
<!--</style>-->

